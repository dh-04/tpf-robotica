// Class automatically generated by Dev-C++ New Class wizard

#include <protocol/PacketServer.h> // class's header file

namespace protocol {

// class constructor
PacketServer::PacketServer()
{
	#ifdef LINUX
	this->toSendMutex = new Mutex();
	#endif
}

// class destructor
PacketServer::~PacketServer()
{
	// insert your code here
}

void PacketServer::sendPacket(Packet * p){
	// Apply mutex
	#ifdef LINUX
	this->toSendMutex->enterMutex();
	#endif

	this->toSend.push(p);

	// Release mutex
	#ifdef LINUX
	this->toSendMutex->leaveMutex();
	#endif
}

void PacketServer::sendAPacket(Packet * p){
	unsigned char length = (unsigned char) p->getActualLength();
	unsigned char i;
	char * packet = p->getPacket();
	
	for ( i = 0 ; i < length ; i++ ){
	    // Write in fd
	    // write(fd,packet[i]);
	    i = i;
	}
	this->waitingForResponse.push_back(p);
}

void PacketServer::run(void){

}

void PacketServer::registerHandler(BoardPacketHandler * bph,int groupid,int boardid){
	char gid = groupid;
	char bid = boardid;
//   	this->handlers.insert( std::pair<char, std::pair<char, BoardPacketHandler *> > (gid,(bid,bph)) );
   	this->handlers[gid][bid] = bph;
}

}
