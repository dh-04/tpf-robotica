// Class automatically generated by Dev-C++ New Class wizard

#include "TrashBinBoardPacketHandler.h" // class's header file
#include "TrashBinPacket.h"
#include <math.h>

// class constructor
TrashBinBoardPacketHandler::TrashBinBoardPacketHandler(PacketServer * ps, char groupid, char boardid)
{
	this->groupid = groupid;
	this->boardid = boardid;
	this->ps = ps;
	this->currentValue = 0;
	this->full = false;
}

// class destructor
TrashBinBoardPacketHandler::~TrashBinBoardPacketHandler()
{
	// insert your code here
}

void TrashBinBoardPacketHandler::handlePacket(Packet * p){
	TrashBinPacket * dcmp = new TrashBinPacket(groupid,boardid);
	dcmp->analysePacket(p);
	
	if ( dcmp->getCommand() == CMD_TRASHBIN_VALUE ){
		short value = dcmp->getTrashBinValue();
		// TODO convert from short to double
		// Lock Mutex
		this->currentValue = value;
		// Release Mutex
	}
	if ( dcmp->getCommand() == CMD_FULL_TRASHBIN_ALARM ){
		// Lock Mutex
		this->full = true;
		// Release Mutex
	}
}

double TrashBinBoardPacketHandler::getValue(){
 	TrashBinPacket * p = new TrashBinPacket(groupid,boardid);
	p->senseTrashBin();
	p->prepareToSend();
	this->ps->sendPacket(p);
	return this->currentValue;
}

bool TrashBinBoardPacketHandler::isFull(){
	// Lock mutex
	bool full = this->full;
	// Release mutex
	return full;
}

void TrashBinBoardPacketHandler::setFullBias(double bias){
	TrashBinPacket * p = new TrashBinPacket(groupid,boardid);
	// TODO convert from double to char
	p->setTrashBinFullThreshold(bias);
	p->prepareToSend();
	this->ps->sendPacket(p);
}
